/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
}


repositories {
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    maven {
        credentials {
            username 'maven'
            password 'gV7woQWfT8'
        }
        allowInsecureProtocol(true)
        url 'http://nexus.yunmotec.com:32055/repository/maven-public/'
        authentication {
            basic(BasicAuthentication)
        }
    }
    mavenLocal()
}

group = 'org.kexing.management'
version = "${projectVersion}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}


configurations {
    all*.exclude group: 'org.springframework.boot',
            module: 'spring-boot-starter-logging'
    all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    implementation platform("com.yunmo.boot:application-dependencies:${applicationDependencies}")
    annotationProcessor platform("com.yunmo.boot:application-dependencies:${applicationDependencies}")
    testAnnotationProcessor platform("com.yunmo.boot:application-dependencies:${applicationDependencies}")


    compileOnly "com.yunmo:generator-annotation"
    annotationProcessor "com.yunmo:generator-processors"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor "org.projectlombok:lombok"
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation("org.mapstruct:mapstruct")
    annotationProcessor("org.mapstruct:mapstruct-processor")

//    annotationProcessor("org.projectlombok:lombok-mapstruct-binding:${lombok_mapstruct_binding_version}")
    components {
        all { ComponentMetadataDetails details ->
            if (details.id.version.endsWith('-SNAPSHOT')) {
                details.changing = true
            }
        }
    }
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.unmappedTargetPolicy=WARN',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
